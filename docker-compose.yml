version: '3.5'
services:
  db:
#    image: mysql:latest
#    command: mysqld --default-authentication-plugin=mysql_native_password
    image: mysql:5.7
#    ports:
#    - '3306:3306'
    volumes:
#      - trade_manager_db:/var/lib/mysql
      - "./mysql:/var/lib/mysql"
    restart: always
    environment:
      MYSQL_DATABASE: 'trade_manager'
      MYSQL_USER: 'trade_manager'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    networks:
    - db_network

  app:
    restart: "no"
    image: &app app
    build: .
    command: bash -c "python3 manage.py collectstatic --no-input && python3 manage.py makemigrations &&  /wait-for-it.sh db:3306 -t 60 -- python3 manage.py migrate && gunicorn --timeout=30 --workers=2 --bind :8000 api.wsgi:application"
    env_file: &envfile
      - ./env.env
#      - env.env
    volumes:
      - ./app:/app
      - static-volume:/app/static
#    expose:
#      - "8000"
    depends_on:
      - "db"
      - "broker"
    networks:
      - web_network
      - db_network
      - broker_network
      - app_network

  worker:
    restart: "no"
    image: *app
    build: .
    command: bash -c "/wait-for-it.sh app:8000 -t 60 -- celery worker --app=worker.worker.app --concurrency=1 --hostname=worker@%h --loglevel=INFO"
#    command: ["celery", "worker", "--app=worker.worker.app", "--concurrency=1", "--hostname=worker@%h", "--loglevel=INFO"]
    env_file: *envfile
    volumes:
      - ./app:/app
    depends_on:
      - db
      - broker
    networks:
      - broker_network
      - db_network
      - app_network

  watcher:
    restart: "no"
    image: *app
    build: .
    command: bash -c "/wait-for-it.sh app:8000 -t 60 -- /app/manage.py message_receiver 10"
    #    command: ["celery", "worker", "--app=worker.worker.app", "--concurrency=1", "--hostname=worker@%h", "--loglevel=INFO"]
    env_file: *envfile
    volumes:
    - ./app:/app
    depends_on:
    - db
    - broker
    networks:
    - broker_network
    - db_network
    - app_network

  broker:
    image: rabbitmq:3
    env_file: *envfile
#    ports:
#      - 5672:5672
    networks:
      - broker_network

  flower:
    restart: "no"
    image: zoomeranalytics/flower:0.9.1-4.0.2
    env_file: *envfile
#    expose:
#      - "5555"
#    ports:
#      - "5555:5555"
    depends_on:
      - broker
    networks:
      - broker_network
      - web_network
      - app_network

  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
      - "5555:5555"
    volumes:
      - static-volume:/app/static
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - web_network
      - app_network


# Names our volume

networks:
  web_network:
    driver: bridge
  app_network:
    driver: bridge
  db_network:
    driver: bridge
  broker_network:
    driver: bridge

volumes:
  trade_manager_db:
  static-volume:
